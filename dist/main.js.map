{"version":3,"sources":["webpack://dots/./src/simulator/vector.js","webpack://dots/./src/simulator/particle.js","webpack://dots/./src/interface/presets/star.js","webpack://dots/./src/simulator/interactions.js","webpack://dots/./src/interface/presets/automaton.js","webpack://dots/./src/interface/presets/gas.js","webpack://dots/./src/interface/presets/network.js","webpack://dots/./src/interface/util/particle_actions.js","webpack://dots/./src/interface/ui_builder.js","webpack://dots/./src/interface/intro.js","webpack://dots/./src/entry.js","webpack://dots/./src/simulator/state.js","webpack://dots/./src/interface/client.js","webpack://dots/./src/interface/display.js","webpack://dots/./src/interface/util/color_generators.js"],"names":["Vector","x","y","this","that","scale","magnitude","dX","dY","Math","hypot","length","start","end","add","subtract","normalize","random","pos","vel","mass","charge","radius","protected","amount","offset","distSq","size","sqrt","particle","isTouching","source","target","newVelocity","momentum","accelerate","inelasticCollide","grow","delete","absorb","maxAcc","Infinity","G","scalar","min","direction","fakeGravity","sizeMultiplier","move","dist","moveAway","pushConstant","pushAway","particleParams","super","nearby","push","spreadPosition","mouse","spread","paint","stars","gases","automata","networks","dots","shoot","pointer","place","buildButtons","buttonNames","buttonContainerID","i","uiElement","document","createElement","id","innerText","getElementById","appendChild","addClass","className","classList","removeClass","remove","hide","show","fade","sleep","idealSeconds","Promise","resolve","setTimeout","waitForModeSelection","querySelector","addEventListener","waitForOptionSelection","adjustForMobile","window","once","runInSequence","asyncFns","reduce","promise","next","then","simulation","particles","wall","needsCleaning","nParticles","calculateInteractions","updateParticles","walls","cleanup","validParticles","update","j","interact","rightDist","bottomDist","leftDist","topDist","state","mouseHistory","Array","from","pressing","msPerAction","particleType","selectedAction","actions","addEvents","continuousAction","addParticle","option","canvas","onclick","selectAction","ontouchend","selectMode","onmousedown","mouseDown","ontouchstart","onmouseup","mouseUp","onmousemove","mouseMove","passive","e","touches","clientX","clientY","moveTo","innerWidth","innerHeight","clearInterval","asyncActions","setInterval","handleActions","preventDefault","stopPropagation","shift","clickAction","reset","client","ctx","getContext","resize","onresize","width","height","renderParticles","visualSize","fillStyle","dot","star","automaton","gas","beginPath","lineWidth","strokeStyle","fromX","fromY","fillRect","nAdjacentParticles","toX","toY","lineTo","stroke","closePath","displayWidth","displayHeight","clearRect","shadowBlur","shadowColor","globalCompositeOperation","arc","PI","color","alpha","sizeToRGBA","circle","fill","directionToColor","speed","speedToHSL","to","run","render","requestAnimationFrame","introsLeftString","localStorage","getItem","introsLeftNumber","parseInt","setItem","max","toString","introsLeft"],"mappings":"mBAAA,MAAMA,EACJ,YAAYC,EAAI,EAAGC,EAAI,GACrBC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EAGX,IAAIE,EAAO,IAAIJ,GAGb,OAFAG,KAAKF,GAAKG,EAAKH,EACfE,KAAKD,GAAKE,EAAKF,EACRC,KAGT,SAASC,EAAO,IAAIJ,GAGlB,OAFAG,KAAKF,GAAKG,EAAKH,EACfE,KAAKD,GAAKE,EAAKF,EACRC,KAGT,MAAMC,EAAO,GAGX,OAFAD,KAAKF,GAAKG,EACVD,KAAKD,GAAKE,EACHD,KAGT,OAAOF,EAAI,EAAGC,EAAI,GAGhB,OAFAC,KAAKF,EAAIA,EACTE,KAAKD,EAAIA,EACFC,KAGT,YAIE,OAHIA,KAAKF,GAAKE,KAAKD,IACjBC,KAAKE,MAAM,EAAIF,KAAKG,aAEfH,KAGT,OAAOC,EAAO,IAAIJ,GAChB,MAAMO,EAAKJ,KAAKF,EAAIG,EAAKH,EACnBO,EAAKL,KAAKD,EAAIE,EAAKF,EACzB,OAAOK,EAAKA,EAAKC,EAAKA,EAGxB,KAAKJ,EAAO,IAAIJ,GACd,MAAMO,EAAKJ,KAAKF,EAAIG,EAAKH,EACnBO,EAAKL,KAAKD,EAAIE,EAAKF,EACzB,OAAOO,KAAKC,MAAMH,EAAIC,GAGxB,IAAIJ,EAAO,IAAIJ,GACb,OAAOG,KAAKF,EAAIG,EAAKH,EAAIE,KAAKD,EAAIE,EAAKF,EAGzC,YACE,OAAOO,KAAKC,MAAMP,KAAKF,EAAGE,KAAKD,GAGjC,aAAaS,EAAS,GACpB,OAAO,IAAIX,EAAOW,EAAQ,GAG5B,aAAaA,EAAS,GACpB,OAAO,IAAIX,EAAO,EAAGW,GAGvB,iBAAiBC,EAAQ,IAAIZ,EAAUa,EAAM,IAAIb,GAC/C,OAAO,IAAIA,EAAO,EAAG,GAAGc,IAAIF,GAAOG,SAASF,GAAKG,YAGnD,cAAcL,EAAS,GACrB,OAAO,IAAIX,EAAOS,KAAKQ,SAAW,GAAKR,KAAKQ,SAAW,IACpDD,YACAX,MAAMM,GAGX,aAAaP,EAAO,IAAIJ,GACtB,OAAO,IAAIA,EAAOI,EAAKH,EAAGG,EAAKF,IAInC,UCpBA,EA1DA,MACE,aAAY,IACVgB,EAAM,IAAI,EAAQ,IAClBC,EAAM,IAAI,EAAQ,KAClBC,EAAO,EAAC,OACRC,EAAS,EAAC,OACVC,EAAS,IAETnB,KAAKe,IAAMA,EACXf,KAAKgB,IAAMA,EACXhB,KAAKiB,KAAOA,EACZjB,KAAKkB,OAASA,EACdlB,KAAKmB,OAASA,EAEdnB,KAAKoB,WAAY,EAGnB,WACE,OAAO,QAAapB,KAAKgB,KAAKd,MAAMF,KAAKiB,MAG3C,OACE,OAAOjB,KAAKmB,OAGd,SACEnB,KAAKe,IAAIJ,IAAIX,KAAKgB,KAGpB,WAAWd,GACT,OAAOF,KAAKmB,OAASjB,EAGvB,WAAWmB,EAAS,IAAI,GACtBrB,KAAKgB,IAAIL,IAAIU,GAGf,KAAKA,EAAS,IAAI,GAChBrB,KAAKe,IAAIJ,IAAIU,GAGf,KAAKA,EAAS,GACZrB,KAAKiB,MAAQI,EAGf,SACErB,KAAKoB,WAAY,EAGnB,WAAWL,EAAM,IAAI,EAAUO,EAAS,GACtC,OAAOtB,KAAKe,IAAIQ,OAAOR,IAAQf,KAAKwB,OAASF,IAAW,EAG1D,WACE,OAAO,OC3BX,EAtBA,cAAmB,EACjB,WAAWpB,GACT,OAAOI,KAAKmB,KAAKzB,KAAKiB,MAAQf,EAGhC,OACE,OAAOI,KAAKmB,KAAKzB,KAAKiB,MAGxB,SAASS,GACP,MAAM,IAAEX,GAAQW,EACVF,EAAOE,EAASF,OAElBxB,KAAK2B,WAAWZ,EAAK,GAAMS,IAASxB,KAAKoB,WCZjB,EAC9BQ,EAAS,IAAI,EACbC,EAAS,IAAI,KAEb,MAAMC,EAAcF,EACjBG,WACApB,IAAIkB,EAAOE,YACX7B,MAAM,GAAK0B,EAAOX,KAAOY,EAAOZ,OACnCW,EAAOZ,IAAId,MAAM,GACjB0B,EAAOI,WAAWF,IDIdG,CAAiBjC,KAAM0B,GClBP,EAACE,EAAS,IAAI,EAAYC,EAAS,IAAI,KAC3DD,EAAOM,KAAKL,EAAOZ,MACnBY,EAAOM,UDiBHC,CAAOpC,KAAM0B,ICWQ,EACzBE,EAAS,IAAI,EACbC,EAAS,IAAI,EACbQ,EAASC,IACTC,EAAI,QAEJ,MAAMC,EAASlC,KAAKmC,IACjBF,EAAIX,EAAOX,KAAQW,EAAOb,IAAIQ,OAAOM,EAAOd,KAC7CsB,GAEIK,EAAY,IAAI,EAAO,EAAG,GAAG/B,IAAIiB,EAAOb,KAAKH,SAASiB,EAAOd,KAEnEc,EAAOG,WAAWU,EAAUxC,MAAMsC,KDrB9BG,CAAY3C,KAAM0B,KEbxB,EARA,cAAwB,EACtB,SAASA,GACH1B,KAAK2B,WAAWD,EAASX,IAAK,EAAIf,KAAKwB,OAASE,EAASF,SDezC,EACtBI,EAAS,IAAI,EACbC,EAAS,IAAI,EACbe,EAAiB,KAEjBf,EAAOgB,KACL,YAAiBhB,EAAOd,IAAKa,EAAOb,KAAKb,MACvC0C,GAAkBhB,EAAOJ,OAASK,EAAOL,QACvCI,EAAOb,IAAI+B,KAAKjB,EAAOd,QCtBzBgC,CAAS/C,KAAM0B,EAAU,OCO/B,EAVA,cAAkB,EAChB,OACE,MAAO,KAGT,SAASA,GFwCa,EACtBE,EAAS,IAAI,EACbC,EAAS,IAAI,EACbQ,EAASC,IACTU,EAAe,SAEf,MAAMzB,EAASK,EAAOb,IAAIQ,OAAOM,EAAOd,KAClCyB,EAASlC,KAAKmC,IAAIO,GAAgBzB,EAASA,GAASc,GACpDK,EAAY,YAAiBb,EAAOd,IAAKa,EAAOb,KACtDc,EAAOG,WAAWU,EAAUxC,MAAMsC,KEhDhCS,CAASjD,KAAM0B,EAAU,SCI7B,EAXA,cAAsB,EACpB,YAAYwB,GACVC,MAAMD,GACNlD,KAAKoD,OAAS,GAGhB,UAAS,IAAErC,IACLf,KAAK2B,WAAWZ,EAAK,IAAIf,KAAKoD,OAAOC,KAAKtC,KCF5CuC,EAAiB,CAACC,EAAOC,IAC7B,SAAcA,EAASlD,KAAKQ,UAAUH,IAAI4C,GAwG5C,EANgB,CACdE,MAjGY,CACZC,MAAOH,GACL,IAAI,EAAK,CACPtC,KAAM,KACND,IAAK,SAAc,MACnBD,IAAKuC,EAAeC,EAAO,OAE/BI,MAAOJ,GACL,IAAI,EAAI,CACNpC,OAAQ,KACRH,IAAK,SAAc,MACnBD,IAAKuC,EAAeC,EAAO,MAE/BK,SAAUL,GACR,IAAI,EAAU,CACZpC,OAAQ,KACRH,IAAK,SAAc,MACnBD,IAAKuC,EAAeC,EAAO,OAE/BM,SAAUN,GACR,IAAI,EAAQ,CACVpC,OAAQ,GACRH,IAAK,SAAc,MACnBD,IAAKuC,EAAeC,EAAO,OAE/BO,KAAMP,GACJ,IAAI,EAAS,CACXvC,IAAK,SAAc,MACnBD,IAAKuC,EAAeC,EAAO,QAsE/BQ,MAlEY,CACZL,MAAO,CAACH,EAAOS,IACb,IAAI,EAAK,CACP/C,KAAM,KACND,IAAKgD,EAAQ9D,MAAM,MACnBa,IAAKuC,EAAeC,EAAO,OAE/BI,MAAO,CAACJ,EAAOS,IACb,IAAI,EAAI,CACN7C,OAAQ,KACRH,IAAKgD,EAAQ9D,MAAM,MACnBa,IAAKuC,EAAeC,EAAO,QAE/BK,SAAU,CAACL,EAAOS,IAChB,IAAI,EAAU,CACZ7C,OAAQ,KACRH,IAAKgD,EAAQ9D,MAAM,MACnBa,IAAKuC,EAAeC,EAAO,OAE/BM,SAAU,CAACN,EAAOS,IAChB,IAAI,EAAQ,CACV7C,OAAQ,GACRH,IAAKgD,EAAQ9D,MAAM,MACnBa,IAAKuC,EAAeC,EAAO,OAE/BO,KAAM,CAACP,EAAOS,IACZ,IAAI,EAAS,CACXhD,IAAKgD,EAAQ9D,MAAM,MACnBa,IAAKuC,EAAeC,EAAO,QAuC/BU,MAnCY,CACZP,MAAOH,GACL,IAAI,EAAK,CACPtC,KAAM,KACND,IAAK,IAAI,EAAO,EAAG,GACnBD,IAAKuC,EAAeC,EAAO,QAE/BI,MAAOJ,GACL,IAAI,EAAI,CACNvC,IAAK,IAAI,EAAO,EAAG,GACnBD,IAAKuC,EAAeC,EAAO,MAC3BpC,OAAQ,OAEZyC,SAAUL,GACR,IAAI,EAAU,CACZpC,OAAQ,KACRH,IAAK,IAAI,EAAO,EAAG,GACnBD,IAAKuC,EAAeC,EAAO,QAE/BM,SAAUN,GACR,IAAI,EAAQ,CACVpC,OAAQ,GACRH,IAAK,IAAI,EAAO,EAAG,GACnBD,IAAKuC,EAAeC,EAAO,QAE/BO,KAAMP,GACJ,IAAI,EAAS,CACXvC,IAAK,IAAI,EAAO,EAAG,GACnBD,IAAKuC,EAAeC,EAAO,UCtG3BW,EAAe,CAACC,EAAaC,KACjC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAY3D,OAAQ6D,GAAK,EAAG,CAC9C,MAAMC,EAAYC,SAASC,cAAc,UACzCF,EAAUG,GAAKN,EAAYE,GAC3BC,EAAUI,UAAYP,EAAYE,GAClCE,SAASI,eAAeP,GAAmBQ,YAAYN,KCKrDO,EAAW,CAACJ,EAAIK,IAAc,IAClCP,SAASI,eAAeF,GAAIM,UAAUpE,IAAImE,GAEtCE,EAAc,CAACP,EAAIK,IAAc,IACrCP,SAASI,eAAeF,GAAIM,UAAUE,OAAOH,GAEzCI,EAAOT,GAAMI,EAASJ,EAAI,UAC1BU,EAAOV,GAAMO,EAAYP,EAAI,UAC7BW,EAAOX,GAAMI,EAASJ,EAAI,YAE1BY,EAAQC,GAAgB,IAC5B,IAAIC,SAAQC,GAAWC,WAAWD,EAAwB,IAAfF,KAEvCI,EAAuB,IAC3B,IAAIH,SAAQC,IACVjB,SAASoB,cAAc,kBAAkBC,iBAAiB,QAASJ,MAGjEK,EAAyB,IAC7B,IAAIN,SAAQC,IACVjB,SAASoB,cAAc,WAAWC,iBAAiB,QAASJ,MAG1DM,EAAkB,KACtBC,OAAOH,iBACL,cACA,KACEf,EAAS,gBAAiB,WAA1BA,GACAA,EAAS,SAAU,cAAnBA,KAEF,CAAEmB,MAAM,KAINC,EAAgB,IAAIC,IACxBA,EAASC,QAAO,CAACC,EAASC,IAASD,EAAQE,KAAKD,IAAOd,QAAQC,WDnC/DtB,EAAa,CAAC,QAAS,QAAS,QAAS,SAAU,kBACnDA,EACE,CAAC,QAAS,QAAS,WAAY,YAC/B,yBELJ,MAAMqC,EAAa,ICLnB,MACE,YAAYC,EAAY,IACtBxG,KAAKwG,UAAYA,EACjBxG,KAAKyG,MAAO,EACZzG,KAAK0G,eAAgB,EAGvB,SACE,MAAMC,EAAa3G,KAAKwG,UAAUhG,OAElCR,KAAK4G,sBAAsBD,GAC3B3G,KAAK6G,gBAAgBF,GAEjB3G,KAAKyG,MAAMzG,KAAK8G,MAAMH,GACtB3G,KAAK0G,eAAe1G,KAAK+G,QAAQJ,GAGvC,YAAYjF,EAAW,IAAI,GACzB1B,KAAKwG,UAAUnD,KAAK3B,GAGtB,cAEE,OADA1B,KAAKyG,MAAQzG,KAAKyG,KACXzG,KAAKyG,KAGd,QAAQE,EAAa3G,KAAKwG,UAAUhG,QAClC,IAAIwG,EAAiB,EAErB,IAAK,IAAI3C,EAAI,EAAGA,EAAIsC,EAAYtC,GAAK,EAAG,CACtC,MAAM3C,EAAW1B,KAAKwG,UAAUnC,GAE5B3C,EAASN,YACPiD,IAAM2C,IAAgBhH,KAAKwG,UAAUQ,GAAkBtF,GAC3DsF,GAAkB,GAGtBhH,KAAKwG,UAAUhG,OAASwG,EAG1B,gBAAgBL,EAAa3G,KAAKwG,UAAUhG,QAC1C,IAAK,IAAI6D,EAAI,EAAGA,EAAIsC,EAAYtC,GAAK,EAAGrE,KAAKwG,UAAUnC,GAAG4C,SAG5D,sBAAsBN,EAAa3G,KAAKwG,UAAUhG,QAChD,IAAK,IAAI6D,EAAI,EAAGA,EAAIsC,EAAYtC,GAAK,EACnC,IAAK,IAAI6C,EAAI,EAAGA,EAAIP,EAAYO,GAAK,EAC/B7C,IAAM6C,GAAGlH,KAAKwG,UAAUnC,GAAG8C,SAASnH,KAAKwG,UAAUU,IAK7D,MAAMP,EAAa3G,KAAKwG,UAAUhG,QAChC,IAAK,IAAI6D,EAAI,EAAGA,EAAIsC,EAAYtC,GAAK,EAAG,CACtC,MAAM,IAAEtD,EAAG,IAAEC,GAAQhB,KAAKwG,UAAUnC,GAC9B7C,EAAOxB,KAAKwG,UAAUnC,GAAG7C,OACzB4F,EAAY,EAAI5F,EAAOT,EAAIjB,EAC3BuH,EAAa,EAAI7F,EAAOT,EAAIhB,EAC5BuH,EAAWvG,EAAIjB,EAAI0B,EACnB+F,EAAUxG,EAAIhB,EAAIyB,EAEpB4F,EAAY,GACdpG,EAAIJ,SAAS,QAAa,EAAII,EAAIlB,IAClCiB,EAAIJ,IAAI,QAAayG,KACZE,EAAW,GACpBtG,EAAIJ,SAAS,QAAa,EAAII,EAAIlB,IAClCiB,EAAIH,SAAS,QAAa0G,KACjBD,EAAa,GACtBrG,EAAIJ,SAAS,QAAa,EAAII,EAAIjB,IAClCgB,EAAIJ,IAAI,QAAa0G,KACZE,EAAU,IACnBvG,EAAIJ,SAAS,QAAa,EAAII,EAAIjB,IAClCgB,EAAIH,SAAS,QAAa2G,MAKhC,QACEvH,KAAKwG,UAAUhG,OAAS,IDxEtB,EAAS,IENf,MACE,YAAYgH,GACVxH,KAAKwH,MAAQA,EACbxH,KAAKwH,MAAMd,eAAgB,EAE3B1G,KAAKuD,MAAQ,IAAI,EAAO,EAAG,GAC3BvD,KAAKyH,aAAeC,MAAMC,KAAK,CAAEnH,OAAQ,IAAK,IAAM,IAAI,EAAO,EAAG,KAElER,KAAK4H,UAAW,EAChB5H,KAAK6H,YAAc,GAEnB7H,KAAK8H,aAAe,QACpB9H,KAAK+H,eAAiB,QAEtB/H,KAAKgI,QAAU,EAEfhI,KAAKiI,YAGP,cACE,OAAO,YAAiBjI,KAAKuD,MAAOvD,KAAKyH,aAAa,IAGxD,gBACE,MAAO,KACuB,UAAxBzH,KAAK+H,gBAA4B/H,KAAKkI,oBAI9C,cAC8B,UAAxBlI,KAAK+H,gBACP/H,KAAKwH,MAAMW,YAAYnI,KAAKgI,QAAQ/D,MAAMjE,KAAK8H,cAAc9H,KAAKuD,QAItE,mBACEvD,KAAKwH,MAAMW,YACTnI,KAAKgI,QAAQhI,KAAK+H,gBAAgB/H,KAAK8H,cACrC9H,KAAKuD,MACLvD,KAAKgE,UAKX,YACE,MAAMoE,EAAS7D,SAASI,eAAe,kBACjCmD,EAAevD,SAASI,eAAe,yBACvC0D,EAAS9D,SAASoB,cAAc,UAEtCyC,EAAOE,QAAUtI,KAAKuI,eACtBH,EAAOI,WAAaxI,KAAKuI,eAEzBT,EAAaQ,QAAUtI,KAAKyI,aAC5BX,EAAaU,WAAaxI,KAAKyI,aAE/BJ,EAAOK,YAAc1I,KAAK2I,YAC1BN,EAAOO,aAAe5I,KAAK2I,YAE3BN,EAAOQ,UAAY7I,KAAK8I,UACxBT,EAAOG,WAAaxI,KAAK8I,UAEzBvE,SAASwE,YAAc/I,KAAKgJ,YAC5BzE,SAASqB,iBAAiB,YAAa5F,KAAKgJ,YAAa,CACvDC,SAAS,IAIb,YACE,OAAOC,IACL,MAAMpJ,EAAIoJ,EAAEC,QAAUD,EAAEC,QAAQ,GAAGC,QAAUF,EAAEE,QACzCrJ,EAAImJ,EAAEC,QAAUD,EAAEC,QAAQ,GAAGE,QAAUH,EAAEG,QAE/CrJ,KAAKuD,MAAM+F,OAAOxJ,EAAIiG,OAAOwD,WAAYxJ,EAAIgG,OAAOyD,aACpDxJ,KAAK4H,UAAW,EAGhB7B,OAAO0D,cAAczJ,KAAK0J,cAC1B1J,KAAK0J,aAAe3D,OAAO4D,YACzB3J,KAAK4J,gBACL5J,KAAK6H,cAKX,YACE,OAAOqB,IACLA,EAAEW,iBACFX,EAAEY,kBACF,MAAMhK,EAAIoJ,EAAEC,QAAUD,EAAEC,QAAQ,GAAGC,QAAUF,EAAEE,QACzCrJ,EAAImJ,EAAEC,QAAUD,EAAEC,QAAQ,GAAGE,QAAUH,EAAEG,QAE/CrJ,KAAKyH,aAAasC,QAClB/J,KAAKyH,aAAapE,KAAK,QAAarD,KAAKuD,QACzCvD,KAAKuD,MAAM+F,OAAOxJ,EAAIiG,OAAOwD,WAAYxJ,EAAIgG,OAAOyD,cAIxD,UACE,MAAO,KACLxJ,KAAKgK,cACLjE,OAAO0D,cAAczJ,KAAK0J,eAI9B,aACE,OAAOR,IACDlJ,KAAK8H,eAAiBoB,EAAErH,OAAO4C,KACjCzE,KAAKwH,MAAMyC,QACXjK,KAAK8H,aAAeoB,EAAErH,OAAO4C,IAE/BzE,KAAKwH,MAAMd,cAAsC,UAAtB1G,KAAK8H,cAIpC,eACE,OAAOoB,IACL,OAAQA,EAAErH,OAAO4C,IACf,IAAK,QACHzE,KAAKwH,MAAMyC,QACX,MACF,QACEjK,KAAK+H,eAAiBmB,EAAErH,OAAO4C,OFnHf8B,GACpB,EAAU,IGJhB,MACE,YAAYiB,EAAO0C,GACjBlK,KAAKwG,UAAYgB,EAAMhB,UACvBxG,KAAKkK,OAASA,EAEdlK,KAAKmK,IAAM5F,SAASoB,cAAc,UAAUyE,WAAW,MAEvDpK,KAAKqK,QAALrK,GACAA,KAAKiK,QAELlE,OAAOuE,SAAWtK,KAAKqK,SAGzB,YACE,OAAO/J,KAAKmC,IAAIzC,KAAKuK,MAAOvK,KAAKwK,QAGnC,SACExK,KAAKiK,QACLjK,KAAKuD,MAAMvD,KAAKkK,OAAO3G,OACvBvD,KAAKyK,kBAGP,kBACEzK,KAAKA,KAAKkK,OAAOpC,gBAGnB,QACE,MAAMnB,EAAa3G,KAAKwG,UAAUhG,OAElC,IAAK,IAAI6D,EAAI,EAAGA,EAAIsC,EAAYtC,GAAK,EAAG,CACtC,MAAM3C,EAAW1B,KAAKwG,UAAUnC,GAC5B3C,EAASgJ,WAAW1K,KAAKE,OAAS,GACpCF,KAAKmK,IAAIQ,UAAY,aACrB3K,KAAK4K,IAAIlJ,IAET1B,KAAK6K,KAAKnJ,IAKhB,OACE1B,KAAKmK,IAAIQ,UAAY,QAErB,MAAMhE,EAAa3G,KAAKwG,UAAUhG,OAClC,IAAK,IAAI6D,EAAI,EAAGA,EAAIsC,EAAYtC,GAAK,EAAGrE,KAAK4K,IAAI5K,KAAKwG,UAAUnC,IAGlE,WACE,MAAMsC,EAAa3G,KAAKwG,UAAUhG,OAClC,IAAK,IAAI6D,EAAI,EAAGA,EAAIsC,EAAYtC,GAAK,EAAGrE,KAAK8K,UAAU9K,KAAKwG,UAAUnC,IAGxE,QACE,MAAMsC,EAAa3G,KAAKwG,UAAUhG,OAClC,IAAK,IAAI6D,EAAI,EAAGA,EAAIsC,EAAYtC,GAAK,EAAGrE,KAAK+K,IAAI/K,KAAKwG,UAAUnC,IAGlE,WACErE,KAAKmK,IAAIa,YAEThL,KAAKmK,IAAIc,UAAY,GACrBjL,KAAKmK,IAAIe,YAAc,wBAEvB,MAAMvE,EAAa3G,KAAKwG,UAAUhG,OAElC,IAAK,IAAI6D,EAAI,EAAGA,EAAIsC,EAAYtC,GAAK,EAAG,CACtC,MAAM3C,EAAW1B,KAAKwG,UAAUnC,GAC1B8G,EAAQzJ,EAASX,IAAIjB,EAAIE,KAAKuK,MAC9Ba,EAAQ1J,EAASX,IAAIhB,EAAIC,KAAKwK,OACpCxK,KAAKmK,IAAIkB,SAASF,EAAOC,EAAO,EAAG,GAEnC,MAAME,EAAqB5J,EAAS0B,OAAO5C,OAC3C,IAAK,IAAI0G,EAAI,EAAGA,EAAIoE,EAAoBpE,GAAK,EAAG,CAC9C,MAAMqE,EAAM7J,EAAS0B,OAAO8D,GAAGpH,EAAIE,KAAKuK,MAClCiB,EAAM9J,EAAS0B,OAAO8D,GAAGnH,EAAIC,KAAKwK,OAExCxK,KAAKmK,IAAIb,OAAO6B,EAAOC,GACvBpL,KAAKmK,IAAIsB,OAAOF,EAAKC,GAEvB9J,EAAS0B,OAAO5C,OAAS,EAE3BR,KAAKmK,IAAIuB,SAET1L,KAAKmK,IAAIwB,YAGX,SACE,MAAO,KACL3L,KAAKuK,MAAQxE,OAAOwD,WACpBvJ,KAAKwK,OAASzE,OAAOyD,YAErBxJ,KAAKkK,OAAO0B,aAAe5L,KAAKuK,MAChCvK,KAAKkK,OAAO2B,cAAgB7L,KAAKwK,OAEjCxK,KAAKmK,IAAI9B,OAAOkC,MAAQvK,KAAKuK,MAC7BvK,KAAKmK,IAAI9B,OAAOmC,OAASxK,KAAKwK,QAIlC,QACExK,KAAKmK,IAAI2B,UAAU,EAAG,EAAG9L,KAAKuK,MAAOvK,KAAKwK,QAC1CxK,KAAKmK,IAAIQ,UAAY,QACrB3K,KAAKmK,IAAIe,YAAc,QACvBlL,KAAKmK,IAAI4B,WAAa,EACtB/L,KAAKmK,IAAI6B,YAAc,mBACvBhM,KAAKmK,IAAI8B,yBAA2B,SAGtC,OAAM,EAAEnM,EAAC,EAAEC,IACTC,KAAKmK,IAAIa,YAEThL,KAAKmK,IAAIc,UAAY,IACrBjL,KAAKkL,YAAc,wBACnBlL,KAAKmK,IAAI+B,IACPpM,EAAIE,KAAKuK,MACTxK,EAAIC,KAAKwK,OACT,KAAQxK,KAAKE,MACb,EACA,EAAII,KAAK6L,IACT,GAEFnM,KAAKmK,IAAIuB,SAET1L,KAAKmK,IAAIwB,YAGX,KAAKjK,GACH,MAAM,IAAEX,GAAQW,EACVF,EAAOE,EAASgJ,WAAW1K,KAAKE,OAChCkM,ECxIgB,EAAC5K,EAAM6K,EAAQ,IAahC,QAJK,MARD,QAIG7K,EAAO,OAAU,EAIA,MACjB,MARF,OAIEA,EAAO,MAAS,EAIG,MACpB,MARD,OAIEA,EAAO,MAAS,EAIE,MAEO6K,KD2HvBC,CAAW5K,EAASF,QAElCxB,KAAKmK,IAAIQ,UAAYyB,EACrBpM,KAAKmK,IAAI6B,YAAcI,EACvBpM,KAAKmK,IAAI4B,WAAa,EAAIvK,EAE1BxB,KAAKuM,OAAOxL,EAAIjB,EAAIE,KAAKuK,MAAOxJ,EAAIhB,EAAIC,KAAKwK,OAAQhJ,GAGvD,OAAO1B,EAAGC,EAAGoB,GACXnB,KAAKmK,IAAIa,YACThL,KAAKmK,IAAI+B,IAAIpM,EAAGC,EAAGoB,EAAQ,EAAG,EAAIb,KAAK6L,IAAI,GAC3CnM,KAAKmK,IAAIqC,OAGX,UAAU9K,GACR,MAAM,IAAEX,EAAG,IAAEC,GAAQU,EACfF,EAAOE,EAASgJ,WAAW1K,KAAKE,OACtCF,KAAKmK,IAAIQ,UCpImB,GAAG7K,OAC7BA,EAAI,EAAU,OACdA,EAAI,EAAU,QACX,ODiIgB2M,CAAiBzL,GAEtChB,KAAKuM,OAAOxL,EAAIjB,EAAIE,KAAKuK,MAAOxJ,EAAIhB,EAAIC,KAAKwK,OAAQhJ,GAGvD,IAAIE,GACF,MAAM,IAAEX,EAAG,IAAEC,GAAQU,EACfF,EAAOE,EAASgJ,WAAW1K,KAAKE,OACtCF,KAAKmK,IAAIQ,UClJa3J,KACxB,MAAM0L,EAAQ1L,EAAI4J,IAAI5J,GAEtB,MAAO,OADKV,KAAKmC,IAAmB,KAARiK,EAAP,IAAwB,IAAK,kBDgJ3BC,CAAW3L,GAEhChB,KAAKuM,OAAOxL,EAAIjB,EAAIE,KAAKuK,MAAOxJ,EAAIhB,EAAIC,KAAKwK,OAAQhJ,GAGvD,KAAI,IAAET,IACJf,KAAKmK,IAAIkB,SAAStK,EAAIjB,EAAIE,KAAKuK,MAAOxJ,EAAIhB,EAAIC,KAAKwK,OAAQ,EAAG,GAGhE,KAAK7C,EAAMiF,GACT5M,KAAKmK,IAAIa,YACThL,KAAKmK,IAAIb,OAAO3B,EAAK7H,EAAIE,KAAKuK,MAAO5C,EAAK5H,EAAIC,KAAKwK,QACnDxK,KAAKmK,IAAIsB,OAAOmB,EAAG9M,EAAIE,KAAKuK,MAAOqC,EAAG7M,EAAIC,KAAKwK,QAC/CxK,KAAKmK,IAAIuB,SACT1L,KAAKmK,IAAIwB,YAGX,QAAQhE,EAAMiF,GACZ5M,KAAKmK,IAAIb,OAAO3B,EAAK7H,EAAIE,KAAKuK,MAAO5C,EAAK5H,EAAIC,KAAKwK,QACnDxK,KAAKmK,IAAIsB,OAAOmB,EAAG9M,EAAIE,KAAKuK,MAAOqC,EAAG7M,EAAIC,KAAKwK,UH3KvBjE,EAAY,GAExC,SAASsG,IACP,EAAQC,SACRvG,EAAWU,SACX8F,sBAAsBF,GAGxBE,uBAAsB,KDlBH,MACjB,MAAMC,EAAmBjH,OAAOkH,aAAaC,QAAQ,eAAiB,IAChEC,EAAmBC,SAASJ,EAAkB,IAKpD,OAJAjH,OAAOkH,aAAaI,QAClB,aACA/M,KAAKgN,IAAIH,EAAmB,EAAG,GAAGI,YAE7BJ,GAyCHK,GACFvH,EACEd,EAAK,SACLE,EAAM,GACNH,EAAK,SACLC,EAAK,wBACLN,EAAS,gBAAiB,YAC1Ba,EACAV,EAAY,gBAAiB,YAC7BI,EAAK,wBACLC,EAAM,GACNH,EAAK,wBACLC,EAAK,iBACLN,EAAS,SAAU,eACnBgB,EACAb,EAAY,SAAU,eACtBI,EAAK,iBACLC,EAAM,GACNH,EAAK,iBACLC,EAAK,SACLE,EAAM,GACND,EAAK,SACLC,EAAM,GACNR,EAAS,QAAS,UAClBK,EAAK,WACLY,GAGFG,EAAcd,EAAK,SAAUE,EAAM,GAAIH,EAAK,WAAYY,GCxD1D+G,Q","file":"main.js","sourcesContent":["class Vector {\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(that = new Vector()) {\n    this.x += that.x;\n    this.y += that.y;\n    return this;\n  }\n\n  subtract(that = new Vector()) {\n    this.x -= that.x;\n    this.y -= that.y;\n    return this;\n  }\n\n  scale(that = 1) {\n    this.x *= that;\n    this.y *= that;\n    return this;\n  }\n\n  moveTo(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  normalize() {\n    if (this.x || this.y) {\n      this.scale(1 / this.magnitude());\n    }\n    return this;\n  }\n\n  distSq(that = new Vector()) {\n    const dX = this.x - that.x;\n    const dY = this.y - that.y;\n    return dX * dX + dY * dY;\n  }\n\n  dist(that = new Vector()) {\n    const dX = this.x - that.x;\n    const dY = this.y - that.y;\n    return Math.hypot(dX, dY);\n  }\n\n  dot(that = new Vector()) {\n    return this.x * that.x + this.y * that.y;\n  }\n\n  magnitude() {\n    return Math.hypot(this.x, this.y);\n  }\n\n  static xAxis(length = 1) {\n    return new Vector(length, 0);\n  }\n\n  static yAxis(length = 1) {\n    return new Vector(0, length);\n  }\n\n  static direction(start = new Vector(), end = new Vector()) {\n    return new Vector(0, 0).add(start).subtract(end).normalize();\n  }\n\n  static random(length = 1) {\n    return new Vector(Math.random() - 0.5, Math.random() - 0.5)\n      .normalize()\n      .scale(length);\n  }\n\n  static clone(that = new Vector()) {\n    return new Vector(that.x, that.y);\n  }\n}\n\nexport default Vector;\n","import Vector from './vector';\n\nclass Particle {\n  constructor({\n    pos = new Vector(),\n    vel = new Vector(),\n    mass = 0,\n    charge = 0,\n    radius = 0\n  }) {\n    this.pos = pos;\n    this.vel = vel;\n    this.mass = mass;\n    this.charge = charge;\n    this.radius = radius;\n\n    this.protected = true;\n  }\n\n  momentum() {\n    return Vector.clone(this.vel).scale(this.mass);\n  }\n\n  size() {\n    return this.radius;\n  }\n\n  update() {\n    this.pos.add(this.vel);\n  }\n\n  visualSize(scale) {\n    return this.radius * scale;\n  }\n\n  accelerate(amount = new Vector()) {\n    this.vel.add(amount);\n  }\n\n  move(amount = new Vector()) {\n    this.pos.add(amount);\n  }\n\n  grow(amount = 0) {\n    this.mass += amount;\n  }\n\n  delete() {\n    this.protected = false;\n  }\n\n  isTouching(pos = new Vector(), offset = 0) {\n    return this.pos.distSq(pos) < (this.size() + offset) ** 2;\n  }\n\n  interact() {\n    return null;\n  }\n}\n\nexport default Particle;\n","import Particle from '../../simulator/particle';\nimport {\n  absorb,\n  inelasticCollide,\n  fakeGravity\n} from '../../simulator/interactions';\n\nclass Star extends Particle {\n  visualSize(scale) {\n    return Math.sqrt(this.mass) * scale;\n  }\n\n  size() {\n    return Math.sqrt(this.mass);\n  }\n\n  interact(particle) {\n    const { pos } = particle;\n    const size = particle.size();\n\n    if (this.isTouching(pos, 0.1 * size) && this.protected) {\n      inelasticCollide(this, particle);\n      absorb(this, particle);\n    } else {\n      fakeGravity(this, particle);\n    }\n  }\n}\n\nexport default Star;\n","import Vector from './vector';\nimport Particle from './particle';\n\nexport const absorb = (source = new Particle(), target = new Particle()) => {\n  source.grow(target.mass);\n  target.delete();\n};\n\nexport const inelasticCollide = (\n  source = new Particle(),\n  target = new Particle()\n) => {\n  const newVelocity = source\n    .momentum()\n    .add(target.momentum())\n    .scale(1 / (source.mass + target.mass));\n  source.vel.scale(0);\n  source.accelerate(newVelocity);\n};\n\nexport const moveAway = (\n  source = new Particle(),\n  target = new Particle(),\n  sizeMultiplier = 1\n) => {\n  target.move(\n    Vector.direction(target.pos, source.pos).scale(\n      sizeMultiplier * (source.size() + target.size()) -\n        source.pos.dist(target.pos)\n    )\n  );\n};\n\nexport const fakeGravity = (\n  source = new Particle(),\n  target = new Particle(),\n  maxAcc = Infinity,\n  G = 0.025\n) => {\n  const scalar = Math.min(\n    (G * source.mass) / source.pos.distSq(target.pos),\n    maxAcc\n  );\n  const direction = new Vector(0, 0).add(source.pos).subtract(target.pos);\n\n  target.accelerate(direction.scale(scalar));\n};\n\nexport const pushAway = (\n  source = new Particle(),\n  target = new Particle(),\n  maxAcc = Infinity,\n  pushConstant = 2e-11\n) => {\n  const distSq = source.pos.distSq(target.pos);\n  const scalar = Math.min(pushConstant / (distSq * distSq), maxAcc);\n  const direction = Vector.direction(target.pos, source.pos);\n  target.accelerate(direction.scale(scalar));\n};\n","import Particle from '../../simulator/particle';\nimport { moveAway } from '../../simulator/interactions';\n\nclass Automaton extends Particle {\n  interact(particle) {\n    if (this.isTouching(particle.pos, 1 * this.size() + particle.size())) {\n      moveAway(this, particle, 1.1);\n    }\n  }\n}\n\nexport default Automaton;\n","import Particle from '../../simulator/particle';\nimport { pushAway } from '../../simulator/interactions';\n\nclass Gas extends Particle {\n  size() {\n    return 0.001;\n  }\n\n  interact(particle) {\n    pushAway(this, particle, 0.00025);\n  }\n}\n\nexport default Gas;\n","import Particle from '../../simulator/particle';\n\nclass Network extends Particle {\n  constructor(particleParams) {\n    super(particleParams);\n    this.nearby = [];\n  }\n\n  interact({ pos }) {\n    if (this.isTouching(pos, 0)) this.nearby.push(pos);\n  }\n}\n\nexport default Network;\n","import Vector from '../../simulator/vector';\nimport Star from '../presets/star';\nimport Automaton from '../presets/automaton';\nimport Gas from '../presets/gas';\nimport Network from '../presets/network';\nimport Particle from '../../simulator/particle';\n\nconst spreadPosition = (mouse, spread) =>\n  Vector.random(spread * Math.random()).add(mouse);\n\nconst paint = {\n  stars: mouse =>\n    new Star({\n      mass: 5e-7,\n      vel: Vector.random(0.00001),\n      pos: spreadPosition(mouse, 0.03)\n    }),\n  gases: mouse =>\n    new Gas({\n      radius: 5e-3,\n      vel: Vector.random(0.0001),\n      pos: spreadPosition(mouse, 0.1)\n    }),\n  automata: mouse =>\n    new Automaton({\n      radius: 6e-3,\n      vel: Vector.random(0.001),\n      pos: spreadPosition(mouse, 0.01)\n    }),\n  networks: mouse =>\n    new Network({\n      radius: 1e-1,\n      vel: Vector.random(0.0002),\n      pos: spreadPosition(mouse, 0.15)\n    }),\n  dots: mouse =>\n    new Particle({\n      vel: Vector.random(0.00001),\n      pos: spreadPosition(mouse, 0.03)\n    })\n};\n\nconst shoot = {\n  stars: (mouse, pointer) =>\n    new Star({\n      mass: 3e-6,\n      vel: pointer.scale(0.007),\n      pos: spreadPosition(mouse, 1e-2)\n    }),\n  gases: (mouse, pointer) =>\n    new Gas({\n      radius: 5e-3,\n      vel: pointer.scale(0.006),\n      pos: spreadPosition(mouse, 1e-6)\n    }),\n  automata: (mouse, pointer) =>\n    new Automaton({\n      radius: 6e-3,\n      vel: pointer.scale(0.003),\n      pos: spreadPosition(mouse, 0.01)\n    }),\n  networks: (mouse, pointer) =>\n    new Network({\n      radius: 1e-1,\n      vel: pointer.scale(0.003),\n      pos: spreadPosition(mouse, 0.05)\n    }),\n  dots: (mouse, pointer) =>\n    new Particle({\n      vel: pointer.scale(0.003),\n      pos: spreadPosition(mouse, 1e-2)\n    })\n};\n\nconst place = {\n  stars: mouse =>\n    new Star({\n      mass: 5e-5,\n      vel: new Vector(0, 0),\n      pos: spreadPosition(mouse, 1e-3)\n    }),\n  gases: mouse =>\n    new Gas({\n      vel: new Vector(0, 0),\n      pos: spreadPosition(mouse, 1e-3),\n      radius: 5e-3\n    }),\n  automata: mouse =>\n    new Automaton({\n      radius: 6e-3,\n      vel: new Vector(0, 0),\n      pos: spreadPosition(mouse, 1e-3)\n    }),\n  networks: mouse =>\n    new Network({\n      radius: 1e-1,\n      vel: new Vector(0, 0),\n      pos: spreadPosition(mouse, 1e-3)\n    }),\n  dots: mouse =>\n    new Particle({\n      vel: new Vector(0, 0),\n      pos: spreadPosition(mouse, 5e-3)\n    })\n};\n\nconst actions = {\n  paint,\n  shoot,\n  place\n};\n\nexport default actions;\n","const buildButtons = (buttonNames, buttonContainerID) => {\n  for (let i = 0; i < buttonNames.length; i += 1) {\n    const uiElement = document.createElement('button');\n    uiElement.id = buttonNames[i];\n    uiElement.innerText = buttonNames[i];\n    document.getElementById(buttonContainerID).appendChild(uiElement);\n  }\n};\n\nconst buildInterface = () => {\n  buildButtons(['paint', 'shoot', 'place', 'reset'], 'option-buttons');\n  buildButtons(\n    ['stars', 'gases', 'networks', 'automata'],\n    'particle-type-buttons'\n  );\n};\n\nexport default buildInterface;\n","const introsLeft = () => {\n  const introsLeftString = window.localStorage.getItem('dotsIntros') || '2';\n  const introsLeftNumber = parseInt(introsLeftString, 10);\n  window.localStorage.setItem(\n    'dotsIntros',\n    Math.max(introsLeftNumber - 1, 0).toString()\n  );\n  return introsLeftNumber;\n};\n\nconst addClass = (id, className) => () =>\n  document.getElementById(id).classList.add(className);\n\nconst removeClass = (id, className) => () =>\n  document.getElementById(id).classList.remove(className);\n\nconst hide = id => addClass(id, 'hidden');\nconst show = id => removeClass(id, 'hidden');\nconst fade = id => addClass(id, 'fade-out');\n\nconst sleep = idealSeconds => () =>\n  new Promise(resolve => setTimeout(resolve, idealSeconds * 990));\n\nconst waitForModeSelection = () =>\n  new Promise(resolve => {\n    document.querySelector('.particle-type').addEventListener('click', resolve);\n  });\n\nconst waitForOptionSelection = () =>\n  new Promise(resolve => {\n    document.querySelector('.option').addEventListener('click', resolve);\n  });\n\nconst adjustForMobile = () => {\n  window.addEventListener(\n    'touchstart',\n    () => {\n      addClass('particle-type', 'top-peek')();\n      addClass('option', 'bottom-peek')();\n    },\n    { once: true }\n  );\n};\n\nconst runInSequence = (...asyncFns) =>\n  asyncFns.reduce((promise, next) => promise.then(next), Promise.resolve());\n\nconst welcomeUser = () => {\n  if (introsLeft()) {\n    runInSequence(\n      show('title'),\n      sleep(2),\n      hide('title'),\n      show('select-particle-type'),\n      addClass('particle-type', 'top-peek'),\n      waitForModeSelection,\n      removeClass('particle-type', 'top-peek'),\n      fade('select-particle-type'),\n      sleep(1),\n      hide('select-particle-type'),\n      show('select-option'),\n      addClass('option', 'bottom-peek'),\n      waitForOptionSelection,\n      removeClass('option', 'bottom-peek'),\n      fade('select-option'),\n      sleep(1),\n      hide('select-option'),\n      show('enjoy'),\n      sleep(1),\n      fade('enjoy'),\n      sleep(1),\n      addClass('enjoy', 'hidden'),\n      hide('welcome'),\n      adjustForMobile\n    );\n  } else {\n    runInSequence(show('title'), sleep(2), hide('welcome'), adjustForMobile);\n  }\n};\n\nexport default welcomeUser;\n","import Display from './interface/display';\nimport Client from './interface/client';\nimport State from './simulator/state';\nimport buildInterface from './interface/ui_builder';\nimport welcomeUser from './interface/intro';\n\nbuildInterface();\n\nconst simulation = new State();\nconst client = new Client(simulation);\nconst display = new Display(simulation, client);\n\nfunction run() {\n  display.render();\n  simulation.update();\n  requestAnimationFrame(run);\n}\n\nrequestAnimationFrame(() => {\n  welcomeUser();\n  run();\n});\n","import Vector from './vector';\nimport Particle from './particle';\n\nclass State {\n  constructor(particles = []) {\n    this.particles = particles;\n    this.wall = true;\n    this.needsCleaning = false;\n  }\n\n  update() {\n    const nParticles = this.particles.length;\n\n    this.calculateInteractions(nParticles);\n    this.updateParticles(nParticles);\n\n    if (this.wall) this.walls(nParticles);\n    if (this.needsCleaning) this.cleanup(nParticles);\n  }\n\n  addParticle(particle = new Particle()) {\n    this.particles.push(particle);\n  }\n\n  toggleWalls() {\n    this.wall = !this.wall;\n    return this.wall;\n  }\n\n  cleanup(nParticles = this.particles.length) {\n    let validParticles = 0;\n\n    for (let i = 0; i < nParticles; i += 1) {\n      const particle = this.particles[i];\n\n      if (particle.protected) {\n        if (i !== validParticles) this.particles[validParticles] = particle;\n        validParticles += 1;\n      }\n    }\n    this.particles.length = validParticles;\n  }\n\n  updateParticles(nParticles = this.particles.length) {\n    for (let i = 0; i < nParticles; i += 1) this.particles[i].update();\n  }\n\n  calculateInteractions(nParticles = this.particles.length) {\n    for (let i = 0; i < nParticles; i += 1) {\n      for (let j = 0; j < nParticles; j += 1) {\n        if (i !== j) this.particles[i].interact(this.particles[j]);\n      }\n    }\n  }\n\n  walls(nParticles = this.particles.length) {\n    for (let i = 0; i < nParticles; i += 1) {\n      const { pos, vel } = this.particles[i];\n      const size = this.particles[i].size();\n      const rightDist = 1 - size - pos.x;\n      const bottomDist = 1 - size - pos.y;\n      const leftDist = pos.x - size;\n      const topDist = pos.y - size;\n\n      if (rightDist < 0) {\n        vel.subtract(Vector.xAxis(2 * vel.x));\n        pos.add(Vector.xAxis(rightDist));\n      } else if (leftDist < 0) {\n        vel.subtract(Vector.xAxis(2 * vel.x));\n        pos.subtract(Vector.xAxis(leftDist));\n      } else if (bottomDist < 0) {\n        vel.subtract(Vector.yAxis(2 * vel.y));\n        pos.add(Vector.yAxis(bottomDist));\n      } else if (topDist < 0) {\n        vel.subtract(Vector.yAxis(2 * vel.y));\n        pos.subtract(Vector.yAxis(topDist));\n      }\n    }\n  }\n\n  reset() {\n    this.particles.length = 0;\n  }\n}\n\nexport default State;\n","import Vector from '../simulator/vector';\nimport actions from './util/particle_actions';\n\nclass Client {\n  constructor(state) {\n    this.state = state;\n    this.state.needsCleaning = true;\n\n    this.mouse = new Vector(0, 0);\n    this.mouseHistory = Array.from({ length: 4 }, () => new Vector(0, 0));\n\n    this.pressing = false;\n    this.msPerAction = 30;\n\n    this.particleType = 'stars';\n    this.selectedAction = 'shoot';\n\n    this.actions = actions;\n\n    this.addEvents();\n  }\n\n  get pointer() {\n    return Vector.direction(this.mouse, this.mouseHistory[0]);\n  }\n\n  handleActions() {\n    return () => {\n      if (this.selectedAction !== 'place') this.continuousAction();\n    };\n  }\n\n  clickAction() {\n    if (this.selectedAction === 'place') {\n      this.state.addParticle(this.actions.place[this.particleType](this.mouse));\n    }\n  }\n\n  continuousAction() {\n    this.state.addParticle(\n      this.actions[this.selectedAction][this.particleType](\n        this.mouse,\n        this.pointer\n      )\n    );\n  }\n\n  addEvents() {\n    const option = document.getElementById('option-buttons');\n    const particleType = document.getElementById('particle-type-buttons');\n    const canvas = document.querySelector('canvas');\n\n    option.onclick = this.selectAction();\n    option.ontouchend = this.selectAction();\n\n    particleType.onclick = this.selectMode();\n    particleType.ontouchend = this.selectMode();\n\n    canvas.onmousedown = this.mouseDown();\n    canvas.ontouchstart = this.mouseDown();\n\n    canvas.onmouseup = this.mouseUp();\n    canvas.ontouchend = this.mouseUp();\n\n    document.onmousemove = this.mouseMove();\n    document.addEventListener('touchmove', this.mouseMove(), {\n      passive: false\n    });\n  }\n\n  mouseDown() {\n    return e => {\n      const x = e.touches ? e.touches[0].clientX : e.clientX;\n      const y = e.touches ? e.touches[0].clientY : e.clientY;\n\n      this.mouse.moveTo(x / window.innerWidth, y / window.innerHeight);\n      this.pressing = true;\n\n      // clear previous interval in case mouseup occurred off of window\n      window.clearInterval(this.asyncActions);\n      this.asyncActions = window.setInterval(\n        this.handleActions(),\n        this.msPerAction\n      );\n    };\n  }\n\n  mouseMove() {\n    return e => {\n      e.preventDefault();\n      e.stopPropagation();\n      const x = e.touches ? e.touches[0].clientX : e.clientX;\n      const y = e.touches ? e.touches[0].clientY : e.clientY;\n\n      this.mouseHistory.shift();\n      this.mouseHistory.push(Vector.clone(this.mouse));\n      this.mouse.moveTo(x / window.innerWidth, y / window.innerHeight);\n    };\n  }\n\n  mouseUp() {\n    return () => {\n      this.clickAction();\n      window.clearInterval(this.asyncActions);\n    };\n  }\n\n  selectMode() {\n    return e => {\n      if (this.particleType !== e.target.id) {\n        this.state.reset();\n        this.particleType = e.target.id;\n      }\n      this.state.needsCleaning = this.particleType === 'stars';\n    };\n  }\n\n  selectAction() {\n    return e => {\n      switch (e.target.id) {\n        case 'reset':\n          this.state.reset();\n          break;\n        default:\n          this.selectedAction = e.target.id;\n      }\n    };\n  }\n}\n\nexport default Client;\n","import {\n  directionToColor,\n  speedToHSL,\n  sizeToRGBA\n} from './util/color_generators';\n\nclass Display {\n  constructor(state, client) {\n    this.particles = state.particles;\n    this.client = client;\n\n    this.ctx = document.querySelector('canvas').getContext('2d');\n\n    this.resize()();\n    this.reset();\n\n    window.onresize = this.resize();\n  }\n\n  get scale() {\n    return Math.min(this.width, this.height);\n  }\n\n  render() {\n    this.reset();\n    this.mouse(this.client.mouse);\n    this.renderParticles();\n  }\n\n  renderParticles() {\n    this[this.client.particleType]();\n  }\n\n  stars() {\n    const nParticles = this.particles.length;\n\n    for (let i = 0; i < nParticles; i += 1) {\n      const particle = this.particles[i];\n      if (particle.visualSize(this.scale) < 1) {\n        this.ctx.fillStyle = 'SandyBrown';\n        this.dot(particle);\n      } else {\n        this.star(particle);\n      }\n    }\n  }\n\n  dots() {\n    this.ctx.fillStyle = 'white';\n\n    const nParticles = this.particles.length;\n    for (let i = 0; i < nParticles; i += 1) this.dot(this.particles[i]);\n  }\n\n  automata() {\n    const nParticles = this.particles.length;\n    for (let i = 0; i < nParticles; i += 1) this.automaton(this.particles[i]);\n  }\n\n  gases() {\n    const nParticles = this.particles.length;\n    for (let i = 0; i < nParticles; i += 1) this.gas(this.particles[i]);\n  }\n\n  networks() {\n    this.ctx.beginPath();\n\n    this.ctx.lineWidth = 0.3;\n    this.ctx.strokeStyle = 'rgba(255,255,255,0.5)';\n\n    const nParticles = this.particles.length;\n\n    for (let i = 0; i < nParticles; i += 1) {\n      const particle = this.particles[i];\n      const fromX = particle.pos.x * this.width;\n      const fromY = particle.pos.y * this.height;\n      this.ctx.fillRect(fromX, fromY, 1, 1);\n\n      const nAdjacentParticles = particle.nearby.length;\n      for (let j = 0; j < nAdjacentParticles; j += 1) {\n        const toX = particle.nearby[j].x * this.width;\n        const toY = particle.nearby[j].y * this.height;\n\n        this.ctx.moveTo(fromX, fromY);\n        this.ctx.lineTo(toX, toY);\n      }\n      particle.nearby.length = 0;\n    }\n    this.ctx.stroke();\n\n    this.ctx.closePath();\n  }\n\n  resize() {\n    return () => {\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n\n      this.client.displayWidth = this.width;\n      this.client.displayHeight = this.height;\n\n      this.ctx.canvas.width = this.width;\n      this.ctx.canvas.height = this.height;\n    };\n  }\n\n  reset() {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    this.ctx.fillStyle = 'white';\n    this.ctx.strokeStyle = 'white';\n    this.ctx.shadowBlur = 0;\n    this.ctx.shadowColor = 'rgba(0, 0, 0, 0)';\n    this.ctx.globalCompositeOperation = 'screen';\n  }\n\n  mouse({ x, y }) {\n    this.ctx.beginPath();\n\n    this.ctx.lineWidth = 1.5;\n    this.strokeStyle = 'rgba(255,255,255,0.2)';\n    this.ctx.arc(\n      x * this.width,\n      y * this.height,\n      0.008 * this.scale,\n      0,\n      2 * Math.PI,\n      false\n    );\n    this.ctx.stroke();\n\n    this.ctx.closePath();\n  }\n\n  star(particle) {\n    const { pos } = particle;\n    const size = particle.visualSize(this.scale);\n    const color = sizeToRGBA(particle.size());\n\n    this.ctx.fillStyle = color;\n    this.ctx.shadowColor = color;\n    this.ctx.shadowBlur = 2 * size;\n\n    this.circle(pos.x * this.width, pos.y * this.height, size);\n  }\n\n  circle(x, y, radius) {\n    this.ctx.beginPath();\n    this.ctx.arc(x, y, radius, 0, 2 * Math.PI, false);\n    this.ctx.fill();\n  }\n\n  automaton(particle) {\n    const { pos, vel } = particle;\n    const size = particle.visualSize(this.scale);\n    this.ctx.fillStyle = directionToColor(vel);\n\n    this.circle(pos.x * this.width, pos.y * this.height, size);\n  }\n\n  gas(particle) {\n    const { pos, vel } = particle;\n    const size = particle.visualSize(this.scale);\n    this.ctx.fillStyle = speedToHSL(vel);\n\n    this.circle(pos.x * this.width, pos.y * this.height, size);\n  }\n\n  dot({ pos }) {\n    this.ctx.fillRect(pos.x * this.width, pos.y * this.height, 1, 1);\n  }\n\n  line(from, to) {\n    this.ctx.beginPath();\n    this.ctx.moveTo(from.x * this.width, from.y * this.height);\n    this.ctx.lineTo(to.x * this.width, to.y * this.height);\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  subLine(from, to) {\n    this.ctx.moveTo(from.x * this.width, from.y * this.height);\n    this.ctx.lineTo(to.x * this.width, to.y * this.height);\n  }\n}\n\nexport default Display;\n","export const sizeToRGBA = (size, alpha = 1) => {\n  const rC = -(18 ** 4);\n  const gC = -(15 ** 4);\n  const bC = -(11 ** 4);\n\n  const rExp = (size - 0.045) ** 4;\n  const gExp = (size - 0.07) ** 4;\n  const bExp = (size - 0.11) ** 4;\n\n  const red = 255 * (rC * rExp + 1);\n  const green = 255 * (gC * gExp + 1);\n  const blue = 255 * (bC * bExp + 1);\n\n  return `rgba(${red},${green},${blue},${alpha})`;\n};\n\nexport const speedToHSL = vel => {\n  const speed = vel.dot(vel);\n  const hue = Math.min(120 * (speed * 1.5e4) + 240, 360);\n  return `hsl(${hue},100%,50%)`;\n};\n\nexport const directionToColor = ({ x }) => {\n  if (x > 0) return 'blue';\n  if (x < 0) return 'green';\n  return 'grey';\n};\n"],"sourceRoot":""}